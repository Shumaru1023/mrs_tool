function [FWHM]=op_getLW(in,Refppmmin,Refppmmax,zpfactor);

if nargin<4
    zpfactor=8;
    if nargin<3
        Refppmmax=5.0;
        if nargin<2
            Refppmmin=4.4;
        end
    end
end

%in=io_readlcmraw(filestring,'dat');
% in=op_zeropad(in,zpfactor);

%FIRST FIND FWHM USING TWO METHODS:

%METHOD 1:  ACTUALLY MEAUSURE FWHM OF WATER PEAK
Refwindow=in.specs(in.ppm>Refppmmin & in.ppm<Refppmmax);
ppmwindow=in.ppm(in.ppm>Refppmmin & in.ppm<Refppmmax);

maxRef_index=find(abs(real(Refwindow))==max(abs(real((Refwindow)))));
maxRef=real(Refwindow(maxRef_index));

plot(ppmwindow,abs(real(Refwindow)),'.');

gtHalfMax=find(abs(real(Refwindow)) >= 0.5*abs(maxRef));

FWHM1=ppmwindow(gtHalfMax(1)) - ppmwindow(gtHalfMax(end));
FWHM1=FWHM1*(42.577*in.Bo);  %Assumes proton.


%METHOD 2:  FIT WATER PEAK TO DETERMINE FWHM PARAM
sat='n';
waterFreq=ppmwindow(maxRef_index);
while sat=='n'
    parsGuess=zeros(1,5);
    parsGuess(1)=maxRef; %AMPLITUDE
    parsGuess(2)=(5*in.Bo/3)/(42.577*in.Bo); %FWHM.  Assumes Proton.  LW = 5/3 Hz/T.
    parsGuess(3)=waterFreq; %FREQUENCY
    parsGuess(4)=0; %Baseline Offset
    parsGuess(5)=0; %Phase
    
    yGuess=op_lorentz(parsGuess,ppmwindow);
    parsFit=nlinfit(ppmwindow,real(Refwindow'),@op_lorentz,parsGuess);
    yFit=op_lorentz(parsFit,ppmwindow);
    
    figure;
    plot(ppmwindow,real(Refwindow),'.',ppmwindow,real(yGuess),':',ppmwindow,yFit);
    legend('data','guess','fit');
    
    sat=input('are you satisfied with fit? y/n [y] ','s');
    if isempty(sat)
        sat='y';
    end
    if sat=='n';
        waterFreq=input('input new water frequency guess: ');
    end

end


FWHM2=abs(parsFit(2));
FWHM2=FWHM2*(42.577*in.Bo);  %Assumes Proton.

FWHM=mean([FWHM1 FWHM2]);  

disp(['The calculated linewidth is:  ' num2str(FWHM) ' Hz.' ]);
